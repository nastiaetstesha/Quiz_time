import os
import re


def load_all_questions(folder_path, encoding='KOI8-R'):
    all_questions = {}

    for filename in os.listdir(folder_path):
        if not filename.endswith('.txt'):
            continue

        full_path = os.path.join(folder_path, filename)
        with open(full_path, 'r', encoding=encoding) as file:
            content = file.read()

        # print(f'üìÑ –ß–∏—Ç–∞–µ–º: {filename}')

        pattern = re.compile(
            r'–í–æ–ø—Ä–æ—Å\s*\d*:?\s*([\s\S]*?)\n–û—Ç–≤–µ—Ç\s*:?\s*([\s\S]*?)(?=\n(?:–ó–∞—á–µ—Ç|–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π|–ò—Å—Ç–æ—á–Ω–∏–∫|–ê–≤—Ç–æ—Ä|–í–æ–ø—Ä–æ—Å|\Z))',
            re.IGNORECASE
        )

        matches = pattern.findall(content)
        # print(f'   –ù–∞–π–¥–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {len(matches)}')

        for question_raw, answer_raw in matches:
            question = clean_text(question_raw)
            answer = clean_text(answer_raw.split('.')[0])  # –æ—Ç–≤–µ—Ç –¥–æ –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏

            if question and answer:
                all_questions[question] = answer
                # print(f"‚úî –í–æ–ø—Ä–æ—Å: {question[:50]}... ‚Üí –û—Ç–≤–µ—Ç: {answer[:30]}")

        # print(f'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {len(all_questions)}\n')

    return all_questions


def clean_text(text):
    text = re.sub(r'\(pic:[^)]+\)', '', text)
    text = re.sub(r'\s+', ' ', text)
    return text.strip()


# def extract_following_lines(text, start_pattern, stopwords=None):
#     """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –¥–æ—Å—Ç–∞—ë—Ç —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –ø–æ–∫–∞ –Ω–µ –Ω–∞—Ç–∫–Ω—ë—Ç—Å—è –Ω–∞ —Å—Ç–æ–ø-—Å–ª–æ–≤–æ."""
#     lines = text.strip().split('\n')
#     start_idx = None
#     result_lines = []
#     stopwords = stopwords or []

#     for i, line in enumerate(lines):
#         if re.match(start_pattern, line, flags=re.IGNORECASE):
#             start_idx = i + 1
#             break

#     if start_idx is not None:
#         for line in lines[start_idx:]:
#             if any(sw.lower() in line.lower() for sw in stopwords):
#                 break
#             result_lines.append(line.strip())

#     return ' '.join(result_lines).strip()
